name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    environment: development
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      
      - name: Test local health endpoint
        run: |
          echo "Building Docker image locally to test health endpoint..."
          docker build -t devops-chatbot:test .
          
          echo "Running container with test environment variables..."
          docker run -d --name test-chatbot -p 8001:8001 \
            -e AZURE_OPENAI_API_KEY="test" \
            -e AZURE_OPENAI_ENDPOINT="https://test.openai.azure.com" \
            -e AZURE_OPENAI_DEPLOYMENT_NAME="test" \
            -e AZURE_OPENAI_API_VERSION="2023-05-15" \
            devops-chatbot:test
          
          echo "Waiting for container to start..."
          sleep 30
          
          echo "Testing health endpoint locally..."
          curl -v http://localhost:8001/health || {
            echo "Local health check failed! Checking container logs:"
            docker logs test-chatbot
            echo "Stopping container..."
            docker stop test-chatbot
            docker rm test-chatbot
            exit 1
          }
          
          echo "Local health check succeeded! Cleaning up..."
          docker stop test-chatbot
          docker rm test-chatbot
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}/devops-chatbot:${{ github.sha }}, ${{ secrets.ACR_REGISTRY }}/devops-chatbot:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'uwachatbot-dev'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_DEV }}
          images: ${{ secrets.ACR_REGISTRY }}/devops-chatbot:${{ github.sha }}
      
      - name: Run Health Check
        run: |
          echo "Waiting for container to start - this may take several minutes for cold starts..."
          
          # Wait longer - up to 5 minutes with checks every 30 seconds
          for i in {1..10}; do
            echo "Attempt $i/10: Checking if app is ready..."
            
            if curl -s -f https://uwachatbot-dev.azurewebsites.net/health; then
              echo "Health check succeeded!"
              exit 0
            fi
            
            echo "Not ready yet, waiting 30 seconds..."
            sleep 30
          done
          
          echo "Health check failed after 5 minutes. Checking container logs..."
          echo "Try accessing the app manually at: https://uwachatbot-dev.azurewebsites.net/health"
          exit 1
  
  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment:
      name: production
      url: https://uwachatbot-prod.azurewebsites.net
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'uwachatbot-prod'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_PROD }}
          images: ${{ secrets.ACR_REGISTRY }}/devops-chatbot:${{ github.sha }}
      
      - name: Run Health Check
        run: |
          echo "Waiting for container to start - this may take several minutes for cold starts..."
          
          # Wait longer - up to 5 minutes with checks every 30 seconds
          for i in {1..10}; do
            echo "Attempt $i/10: Checking if app is ready..."
            
            if curl -s -f https://uwachatbot-prod.azurewebsites.net/health; then
              echo "Health check succeeded!"
              exit 0
            fi
            
            echo "Not ready yet, waiting 30 seconds..."
            sleep 30
          done
          
          echo "Health check failed after 5 minutes. Checking container logs..."
          echo "Try accessing the app manually at: https://uwachatbot-prod.azurewebsites.net/health"
          exit 1
